From 37d48e62e030f46318b0a4e1c69d7cee21b563bc Mon Sep 17 00:00:00 2001
From: neo <neo_vincent@outlook.com>
Date: Thu, 2 Mar 2023 22:00:22 +0800
Subject: [PATCH] - add skip reject support

---
 kvmd/apps/otg/__init__.py     | 10 +++++++---
 kvmd/apps/otgmsd/__init__.py  |  9 ++++++++-
 kvmd/plugins/msd/otg/drive.py |  4 +++-
 3 files changed, 18 insertions(+), 5 deletions(-)

diff --git a/kvmd/apps/otg/__init__.py b/kvmd/apps/otg/__init__.py
index 4c811d2b..4d14e361 100644
--- a/kvmd/apps/otg/__init__.py
+++ b/kvmd/apps/otg/__init__.py
@@ -50,8 +50,12 @@ def _mkdir(path: str) -> None:
     os.mkdir(path)
 
 
-def _chown(path: str, user: str) -> None:
-    get_logger().info("CHOWN --- %s - %s", user, path)
+def _chown(path: str, user: str, optional: bool=False) -> None:
+    logger = get_logger()
+    if optional and not os.access(path, os.F_OK):
+        logger.info("CHOWN --- %s - [SKIPPED] %s", user, path)
+        return
+    logger.info("CHOWN --- %s - %s", user, path)
     shutil.chown(path, user)
 
 
@@ -182,7 +186,7 @@ class _GadgetConfig:
             _chown(join(func_path, "lun.0/cdrom"), user)
             _chown(join(func_path, "lun.0/ro"), user)
             _chown(join(func_path, "lun.0/file"), user)
-            _chown(join(func_path, "lun.0/forced_eject"), user)
+            _chown(join(func_path, "lun.0/forced_eject"), user, optional=True)
         _symlink(func_path, join(self.__profile_path, func))
         name = ("Mass Storage Drive" if self.__msd_instance == 0 else f"Extra Drive #{self.__msd_instance}")
         self.__create_meta(func, name)
diff --git a/kvmd/apps/otgmsd/__init__.py b/kvmd/apps/otgmsd/__init__.py
index 2540eb0b..709409e1 100644
--- a/kvmd/apps/otgmsd/__init__.py
+++ b/kvmd/apps/otgmsd/__init__.py
@@ -42,6 +42,8 @@ def _get_param(gadget: str, instance: int, param: str) -> str:
     with open(_get_param_path(gadget, instance, param)) as param_file:
         return param_file.read().strip()
 
+def _has_param(gadget: str, instance: int, param: str) -> bool:
+    return os.access(_get_param_path(gadget, instance, param), os.F_OK)
 
 def _set_param(gadget: str, instance: int, param: str, value: str) -> None:
     try:
@@ -84,11 +86,16 @@ def main(argv: (list[str] | None)=None) -> None:
         raise SystemExit(f"Error: KVMD MSD not using 'otg'"
                          f" (now configured {config.kvmd.msd.type!r})")
 
+    has_param = (lambda param: _has_param(config.otg.gadget, options.instance, param))
     set_param = (lambda param, value: _set_param(config.otg.gadget, options.instance, param, value))
     get_param = (lambda param: _get_param(config.otg.gadget, options.instance, param))
 
     if options.eject:
-        set_param("forced_eject", "")
+        # set_param("forced_eject", "")
+        if has_param("forced_eject"):
+            set_param("forced_eject", "")
+        else:
+            set_param("file", "")
 
     if options.set_cdrom is not None:
         set_param("cdrom", str(int(options.set_cdrom)))
diff --git a/kvmd/plugins/msd/otg/drive.py b/kvmd/plugins/msd/otg/drive.py
index 407aef9e..ee5b0869 100644
--- a/kvmd/plugins/msd/otg/drive.py
+++ b/kvmd/plugins/msd/otg/drive.py
@@ -51,7 +51,7 @@ class Drive:
     # =====
 
     def set_image_path(self, path: str) -> None:
-        if path:
+        if path or not self.__has_param("forced_eject"):
             self.__set_param("file", path)
         else:
             self.__set_param("forced_eject", "")
@@ -72,6 +72,8 @@ class Drive:
         return (not int(self.__get_param("ro")))
 
     # =====
+    def __has_param(self, param: str) -> bool:
+        return os.access(os.path.join(self.__lun_path, param), os.F_OK)
 
     def __get_param(self, param: str) -> str:
         with open(os.path.join(self.__lun_path, param)) as param_file:
-- 
2.30.1 (Apple Git-130)

